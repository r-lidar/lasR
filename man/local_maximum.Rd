% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/stages.R
\name{local_maximum}
\alias{local_maximum}
\title{Local Maximum}
\usage{
local_maximum(
  ws,
  min_height = 2,
  filter = "",
  ofile = tempgpkg(),
  use_attribute = "Z"
)
}
\arguments{
\item{ws}{numeric. Diameter of the moving window used to detect the local maxima in the units of
the input data (usually meters).}

\item{min_height}{numeric. Minimum height of a local maximum. Threshold below which a point cannot be a
local maximum. Default is 2.}

\item{filter}{the 'filter' argument allows filtering of the point-cloud to work with points of
interest. The available filters are those from LASlib and can be found by running \link{filter_usage}.
For a given algorithm when a filter is applied, only the points that meet the criteria are processes.
The most common strings are "-keep_first", "-keep_class 2", "drop_z_below 2". For more details see
\link{filters}.}

\item{ofile}{character. Full outputs are always stored on disk. If \code{ofile = ""}
then the stage will not store the result on disk and will return nothing. It will however
hold partial output results temporarily in memory. This is useful for stage that are only
intermediate stage.}

\item{use_attribute}{character. By default the local maximum is performed on the coordinate Z. Can also be
the name of an extra bytes attribute such as 'HAG' if it exists. Can also be 'Intensity' but there is
probably no use case for that one.}
}
\description{
The Local Maximum stage identifies points that are locally maximum. The window size is
fixed and circular. This stage does not modify the point cloud. It produces a derived product
in vector format.
}
\examples{
f <- system.file("extdata", "MixedConifer.las", package = "lasR")
read <- reader_las()
lmf <- local_maximum(3)
ans <- exec(read + lmf, on = f)
ans
}

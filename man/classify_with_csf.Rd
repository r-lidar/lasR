% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/stages.R
\name{classify_with_csf}
\alias{classify_with_csf}
\title{Classify ground points}
\usage{
classify_with_csf(
  slope_smooth = FALSE,
  class_threshold = 0.5,
  cloth_resolution = 0.5,
  rigidness = 1L,
  iterations = 500L,
  time_step = 0.65,
  ...,
  class = 2L,
  filter = ""
)
}
\arguments{
\item{slope_smooth}{logical. When steep slopes exist, set this parameter to TRUE to reduce
errors during post-processing.}

\item{class_threshold}{scalar. The distance to the simulated cloth to classify a point cloud into ground
and non-ground. The default is 0.5.}

\item{cloth_resolution}{scalar. The distance between particles in the cloth. This is usually set to the
average distance of the points in the point cloud. The default value is 0.5.}

\item{rigidness}{integer. The rigidness of the cloth. 1 stands for very soft (to fit rugged
terrain), 2 stands for medium, and 3 stands for hard cloth (for flat terrain). The default is 1.}

\item{iterations}{integer. Maximum iterations for simulating cloth. The default value is 500. Usually,
there is no need to change this value.}

\item{time_step}{scalar. Time step when simulating the cloth under gravity. The default value
is 0.65. Usually, there is no need to change this value. It is suitable for most cases.}

\item{...}{Unused}

\item{class}{integer. The classification to attribute to the points. Usually 2 for ground points.}

\item{filter}{the 'filter' argument allows filtering of the point-cloud to work with points of
interest. For a given stage when a filter is applied, only the points that meet the criteria are processed.
The most common strings are \verb{Classification == 2"}, \code{"Z > 2"}, \code{"Intensity < 100"}. For more details see
\link{filters}.}
}
\value{
This stage transforms the point cloud in the pipeline. It consequently returns nothing.
}
\description{
Classify points using the Cloth Simulation Filter by Zhang et al. (2016) (see references) that relies
on the authors' original source code. If the point cloud already has ground points, the classification
of the original ground point is set to zero. This stage modifies the point cloud in the pipeline but
does not produce any output.
}
\examples{
f <- system.file("extdata", "Topography.las", package="lasR")
pipeline = classify_with_csf(TRUE, 1 ,1, time_step = 1) + write_las()
ans = exec(pipeline, on = f, progress = TRUE)
}
\references{
W. Zhang, J. Qi*, P. Wan, H. Wang, D. Xie, X. Wang, and G. Yan, “An Easy-to-Use Airborne LiDAR Data
Filtering Method Based on Cloth Simulation,” Remote Sens., vol. 8, no. 6, p. 501, 2016.
(http://www.mdpi.com/2072-4292/8/6/501/htm)
}
